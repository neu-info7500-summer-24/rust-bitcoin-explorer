name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: frontend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    # Frontend setup
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    # - name: Wait for Server to be Ready
    #   run: |
    #     npx wait-on http://localhost:3000

    - name: Install Playwright Browsers
      run: |
        cd frontend
        npx playwright install --with-deps

    - name: Run Playwright Tests
      run: |
        cd frontend
        npx start-server-and-test 'npm start' http://localhost:3000 'npx playwright test'

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30
    
    # Backend setup
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Build Backend
      run: |
        cd backend
        cargo build --release

  docker:
    name: Build and Deploy Docker Image
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: aravind33b/rust_explorer:latest

    # - name: Deploy to hosting service
    #   env:
    #     API_KEY: ${{ secrets.API_KEY }}
    #   run: |
    #     # aws ecs update-service --cluster CLUSTER_NAME --service SERVICE_NAME --force-new-deployment
